{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/admin/Documents/4 \\u043A\\u0443\\u0440\\u0441/JS/PROJECT/JS_PROJECT/react-app/rent-a-car-react/rent-a-car-react/src/routes/Route.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router-dom\";\nexport default function RouteWrapper({\n  component: Component,\n  isPrivate,\n  ...rest\n}) {\n  /**\n   * Redirect user to SignIn page if he tries to access a private route\n   * without authentication.\n   */\n  // if (isPrivate && !sessionStorage.getItem(\"user\")) {\n  //   return <Redirect to={{ pathname: \"/login\" }} />;\n  // }\n\n  /**\n   * Redirect user to login page after logout\n   */\n  if (!isPrivate && sessionStorage.getItem(\"user\")) {// if (window.location.pathname === \"/logout\") {\n    // console.log(\"redirect to login\");\n    //return <Redirect to={{ pathname: \"/login\" }} />;\n    //}\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    component: Component\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n}\n_c = RouteWrapper;\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n};\nRouteWrapper.defaultProps = {\n  isPrivate: false\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"RouteWrapper\");","map":{"version":3,"sources":["/home/admin/Documents/4 курс/JS/PROJECT/JS_PROJECT/react-app/rent-a-car-react/rent-a-car-react/src/routes/Route.js"],"names":["React","PropTypes","Route","Redirect","RouteWrapper","component","Component","isPrivate","rest","sessionStorage","getItem","propTypes","bool","oneOfType","element","func","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,eAAe,SAASC,YAAT,CAAsB;AACnCC,EAAAA,SAAS,EAAEC,SADwB;AAEnCC,EAAAA,SAFmC;AAGnC,KAAGC;AAHgC,CAAtB,EAIZ;AACD;AACF;AACA;AACA;AACE;AACA;AACA;;AAEA;AACF;AACA;AACE,MAAI,CAACD,SAAD,IAAcE,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAlB,EAAkD,CAChD;AACA;AACA;AACA;AACD;;AAED,sBAAO,QAAC,KAAD,OAAWF,IAAX;AAAiB,IAAA,SAAS,EAAEF;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;KAxBuBF,Y;AA0BxBA,YAAY,CAACO,SAAb,GAAyB;AACvBJ,EAAAA,SAAS,EAAEN,SAAS,CAACW,IADE;AAEvBP,EAAAA,SAAS,EAAEJ,SAAS,CAACY,SAAV,CAAoB,CAACZ,SAAS,CAACa,OAAX,EAAoBb,SAAS,CAACc,IAA9B,CAApB;AAFY,CAAzB;AAKAX,YAAY,CAACY,YAAb,GAA4B;AAC1BT,EAAAA,SAAS,EAAE;AADe,CAA5B","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport default function RouteWrapper({\n  component: Component,\n  isPrivate,\n  ...rest\n}) {\n  /**\n   * Redirect user to SignIn page if he tries to access a private route\n   * without authentication.\n   */\n  // if (isPrivate && !sessionStorage.getItem(\"user\")) {\n  //   return <Redirect to={{ pathname: \"/login\" }} />;\n  // }\n\n  /**\n   * Redirect user to login page after logout\n   */\n  if (!isPrivate && sessionStorage.getItem(\"user\")) {\n    // if (window.location.pathname === \"/logout\") {\n    // console.log(\"redirect to login\");\n    //return <Redirect to={{ pathname: \"/login\" }} />;\n    //}\n  }\n\n  return <Route {...rest} component={Component} />;\n}\n\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n};\n\nRouteWrapper.defaultProps = {\n  isPrivate: false,\n};\n"]},"metadata":{},"sourceType":"module"}