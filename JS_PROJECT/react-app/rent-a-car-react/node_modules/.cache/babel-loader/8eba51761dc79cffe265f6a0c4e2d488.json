{"ast":null,"code":"const {\n  config\n} = require(\"../config/config\");\n\nconst APIURL = \"http://localhost:3001/api\"; //config.apiUrl;\n\nexport const carService = {\n  addCar,\n  updateCar,\n  deleteCar\n}; //TODO fix retrieve result\n\nfunction addCar(car) {\n  console.log(\"Adding car \");\n  let details = {\n    model: car.model,\n    brand: car.brand,\n    year: car.year,\n    doors: car.doors,\n    price: car.price,\n    seats: car.seats,\n    isAvailable: car.isAvailable,\n    rentedBy: \"test\",\n    location: car.location\n  };\n  let formBody = [];\n\n  for (let property in details) {\n    let encodedKey = encodeURIComponent(property);\n    let encodedValue = encodeURIComponent(details[property]);\n    formBody.push(encodedKey + \"=\" + encodedValue);\n  }\n\n  formBody = formBody.join(\"&\");\n  return fetch(\"http://localhost:3001/api/addCar\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\n    },\n    body: formBody\n  }).then(car => {\n    localStorage.setItem(\"addedCar\", car);\n    return car;\n  });\n}\n\nfunction deleteCar(id) {\n  console.log(\"deleting car\" + id);\n  return fetch(\"http://localhost:3001/api/removeCar/\" + id, {\n    method: \"DELETE\"\n  });\n} //TODO not working\n\n\nfunction updateCar(car, id) {\n  console.log(\"Updating car \" + car);\n  let details = {\n    model: car.model,\n    brand: car.brand,\n    year: car.year,\n    doors: car.doors,\n    price: car.price,\n    seats: car.seats,\n    isAvailable: car.isAvailable,\n    rentedBy: \"test\",\n    location: car.location\n  };\n  let formBody = [];\n\n  for (let property in details) {\n    let encodedKey = encodeURIComponent(property);\n    let encodedValue = encodeURIComponent(details[property]);\n    formBody.push(encodedKey + \"=\" + encodedValue);\n  }\n\n  formBody = formBody.join(\"&\");\n  return fetch(\"http://localhost:3001/api/updateCar/\" + id, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\n    },\n    body: formBody\n  }).then(resp => {\n    resp.json();\n    return resp;\n  });\n}\n\nexport default carService;","map":{"version":3,"sources":["/home/admin/Documents/4 курс/JS/PROJECT/JS_PROJECT/react-app/rent-a-car-react/rent-a-car-react/src/service/car.service.js"],"names":["config","require","APIURL","carService","addCar","updateCar","deleteCar","car","console","log","details","model","brand","year","doors","price","seats","isAvailable","rentedBy","location","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","fetch","method","headers","body","then","localStorage","setItem","id","resp","json"],"mappings":"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","sourcesContent":["const { config } = require(\"../config/config\");\n\nconst APIURL = \"http://localhost:3001/api\"; //config.apiUrl;\n\nexport const carService = {\n  addCar,\n  updateCar,\n  deleteCar,\n};\n\n//TODO fix retrieve result\nfunction addCar(car) {\n  console.log(\"Adding car \");\n\n  let details = {\n    model: car.model,\n    brand: car.brand,\n    year: car.year,\n    doors: car.doors,\n    price: car.price,\n    seats: car.seats,\n    isAvailable: car.isAvailable,\n    rentedBy: \"test\",\n    location: car.location,\n  };\n\n  let formBody = [];\n  for (let property in details) {\n    let encodedKey = encodeURIComponent(property);\n    let encodedValue = encodeURIComponent(details[property]);\n    formBody.push(encodedKey + \"=\" + encodedValue);\n  }\n  formBody = formBody.join(\"&\");\n\n  return fetch(\"http://localhost:3001/api/addCar\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n    },\n    body: formBody,\n  }).then((car) => {\n    localStorage.setItem(\"addedCar\", car);\n    return car;\n  });\n}\n\nfunction deleteCar(id) {\n  console.log(\"deleting car\" + id);\n\n  return fetch(\"http://localhost:3001/api/removeCar/\" + id, {\n    method: \"DELETE\",\n  });\n}\n\n//TODO not working\nfunction updateCar(car, id) {\n  console.log(\"Updating car \" + car);\n\n  let details = {\n    model: car.model,\n    brand: car.brand,\n    year: car.year,\n    doors: car.doors,\n    price: car.price,\n    seats: car.seats,\n    isAvailable: car.isAvailable,\n    rentedBy: \"test\",\n    location: car.location,\n  };\n\n  let formBody = [];\n  for (let property in details) {\n    let encodedKey = encodeURIComponent(property);\n    let encodedValue = encodeURIComponent(details[property]);\n    formBody.push(encodedKey + \"=\" + encodedValue);\n  }\n  formBody = formBody.join(\"&\");\n\n  return fetch(\"http://localhost:3001/api/updateCar/\" + id, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n    },\n    body: formBody,\n  }).then((resp) => {\n    resp.json();\n    return resp;\n  });\n}\n\nexport default carService;\n"]},"metadata":{},"sourceType":"module"}